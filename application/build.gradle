apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

checkstyle {
    toolVersion = '8.1'
}

pmd {
    toolVersion = '6.8.0'
    ruleSets = []
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.a65apps.kalimullinilnazrafilovich.application"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    lintOptions {
        lintConfig file("${rootDir}/config/lint/lint.xml")
        abortOnError false
        checkAllWarnings true
        warningsAsErrors true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task checkstyle(type: Checkstyle) {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'

    // empty classpath
    classpath = files()
}

task pmd(type: Pmd) {
    description 'Identifying potential problems mainly dead code, duplicated code, cyclomatic complexity and overcomplicated expressions'
    group 'verification'
    ruleSetFiles = files("${rootDir}/config/pmd/rules-pmd.xml")
    source = fileTree('src/main/java')
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        html.destination file("$project.buildDir/outputs/pmd/pmd.html")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':java')
    implementation project(path: ':library')

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'

    //Decode route points
    implementation 'com.google.maps.android:android-maps-utils:2.0.3'

    //Google Maps
    implementation 'com.google.android.gms:play-services-maps:17.0.0'

    //Moxy
    implementation "com.github.moxy-community:moxy:2.1.2"
    kapt "com.github.moxy-community:moxy-compiler:2.1.2"
    implementation "com.github.moxy-community:moxy-app-compat:2.1.2"

    //Dagger2
    implementation 'com.google.dagger:dagger:2.28.3'
    kapt'com.google.dagger:dagger-compiler:2.28.3'

    //Room
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.google.android.material:material:1.1.0'
}